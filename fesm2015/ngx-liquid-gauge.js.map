{"version":3,"file":"ngx-liquid-gauge.js.map","sources":["ng://ngx-liquid-gauge/lib/ngx-liquid-gauge.service.ts","ng://ngx-liquid-gauge/lib/liquidFillGauge.ts","ng://ngx-liquid-gauge/lib/ngx-liquid-gauge.component.ts","ng://ngx-liquid-gauge/lib/ngx-liquid-gauge.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxLiquidGaugeService {\r\n\r\n  constructor() { }\r\n}\r\n","/*!\r\n* Note this was taken from Curtis Bratton's code: http://bl.ocks.org/brattonc/5e5ce9beee483220e2f6\r\n* I upgraded the D3 API and made minor modifications along the way as I converted it to Typescript from Javascript.\r\n* All credits go to Curtis.\r\n* Dayo Adetoye. 2018. https://github.com/adedayo\r\n*/\r\n\r\n\r\nimport * as d3 from 'd3';\r\n\r\n/*!\r\n * @license Open source under BSD 2-clause (http://choosealicense.com/licenses/bsd-2-clause/)\r\n * Copyright (c) 2015, Curtis Bratton\r\n * All rights reserved.\r\n *\r\n * Liquid Fill Gauge v1.1\r\n */\r\nexport function liquidFillGaugeDefaultSettings() {\r\n  return {\r\n    minValue: 0, // The gauge minimum value.\r\n    maxValue: 100, // The gauge maximum value.\r\n    circleThickness: 0.05, // The outer circle thickness as a percentage of it's radius.\r\n    circleFillGap: 0.05, // The size of the gap between the outer circle and wave circle as a percentage of the outer circles radius.\r\n    circleColor: '#178BCA', // The color of the outer circle.\r\n    waveHeight: 0.05, // The wave height as a percentage of the radius of the wave circle.\r\n    waveCount: 1, // The number of full waves per width of the wave circle.\r\n    waveRiseTime: 1000, // The amount of time in milliseconds for the wave to rise from 0 to it's final height.\r\n    waveAnimateTime: 18000, // The amount of time in milliseconds for a full wave to enter the wave circle.\r\n    waveRise: true, // Control if the wave should rise from 0 to it's full height, or start at it's full height.\r\n    // tslint:disable-next-line:max-line-length\r\n    waveHeightScaling: true, // Controls wave size scaling at low and high fill percentages. When true, wave height reaches it's maximum at 50% fill, and minimum at 0% and 100% fill. This helps to prevent the wave from making the wave circle from appear totally full or empty when near it's minimum or maximum fill.\r\n    waveAnimate: true, // Controls if the wave scrolls or is static.\r\n    waveColor: '#178BCA', // The color of the fill wave.\r\n    waveOffset: 0, // The amount to initially offset the wave. 0 = no offset. 1 = offset of one full wave.\r\n    textVertPosition: .5, // The height at which to display the percentage text withing the wave circle. 0 = bottom, 1 = top.\r\n    textSize: 1, // The relative height of the text to display in the wave circle. 1 = 50%\r\n    // tslint:disable-next-line:max-line-length\r\n    valueCountUp: true, // If true, the displayed value counts up from 0 to it's final value upon loading. If false, the final value is displayed.\r\n    displayPercent: true, // If true, a % symbol is displayed after the value.\r\n\r\n    textColor: '#045681', // The color of the value text when the wave does not overlap it.\r\n    waveTextColor: '#A4DBf8' // The color of the value text when the wave overlaps it.\r\n  };\r\n}\r\n\r\nexport function loadLiquidFillGauge(elementId, value, config) {\r\n  if (config == null) {\r\n    config = liquidFillGaugeDefaultSettings();\r\n  }\r\n  const gauge = d3.select('#' + elementId);\r\n  const radius = Math.min(parseInt(gauge.style('width'), 10), parseInt(gauge.style('height'), 10)) / 2;\r\n  const locationX = parseInt(gauge.style('width'), 10) / 2 - radius;\r\n  const locationY = parseInt(gauge.style('height'), 10) / 2 - radius;\r\n  let fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value)) / config.maxValue;\r\n\r\n  let waveHeightScale;\r\n  if (config.waveHeightScaling) {\r\n    waveHeightScale = d3.scaleLinear()\r\n      .range([0, config.waveHeight, 0])\r\n      .domain([0, 50, 100]);\r\n  } else {\r\n    waveHeightScale = d3.scaleLinear()\r\n      .range([config.waveHeight, config.waveHeight])\r\n      .domain([0, 100]);\r\n  }\r\n\r\n  const textPixels = (config.textSize * radius / 2);\r\n  const textFinalValue = parseFloat(value).toFixed(2);\r\n  const textStartValue = config.valueCountUp ? config.minValue : textFinalValue;\r\n  const percentText = config.displayPercent ? '%' : '';\r\n  const circleThickness = config.circleThickness * radius;\r\n  const circleFillGap = config.circleFillGap * radius;\r\n  const fillCircleMargin = circleThickness + circleFillGap;\r\n  const fillCircleRadius = radius - fillCircleMargin;\r\n  let waveHeight = fillCircleRadius * waveHeightScale(fillPercent * 100);\r\n\r\n  const waveLength = fillCircleRadius * 2 / config.waveCount;\r\n  const waveClipCount = 1 + config.waveCount;\r\n  const waveClipWidth = waveLength * waveClipCount;\r\n\r\n  // Rounding functions so that the correct number of decimal places is always displayed as the value counts up.\r\n  let textRounder = function (val) {\r\n    return '' + Math.round(val);\r\n  };\r\n  if (parseFloat(textFinalValue) !== parseFloat(textRounder(textFinalValue))) {\r\n    textRounder = function (val) {\r\n      return parseFloat(val).toFixed(1);\r\n    };\r\n  }\r\n  if (parseFloat(textFinalValue) !== parseFloat(textRounder(textFinalValue))) {\r\n    textRounder = function (val) {\r\n      return parseFloat(val).toFixed(2);\r\n    };\r\n  }\r\n\r\n  // Data for building the clip wave area.\r\n  const data = [];\r\n  for (let i = 0; i <= 40 * waveClipCount; i++) {\r\n    data.push({\r\n      x: i / (40 * waveClipCount),\r\n      y: (i / (40))\r\n    });\r\n  }\r\n\r\n  // Scales for drawing the outer circle.\r\n  const gaugeCircleX = d3.scaleLinear().range([0, 2 * Math.PI]).domain([0, 1]);\r\n  const gaugeCircleY = d3.scaleLinear().range([0, radius]).domain([0, radius]);\r\n\r\n  // Scales for controlling the size of the clipping path.\r\n  let waveScaleX = d3.scaleLinear().range([0, waveClipWidth]).domain([0, 1]);\r\n  let waveScaleY = d3.scaleLinear().range([0, waveHeight]).domain([0, 1]);\r\n\r\n  // Scales for controlling the position of the clipping path.\r\n  let waveRiseScale = d3.scaleLinear()\r\n    // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave\r\n    // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill\r\n    // circle at 100%.\r\n    .range([(fillCircleMargin + fillCircleRadius * 2 + waveHeight), (fillCircleMargin - waveHeight)])\r\n    .domain([0, 1]);\r\n  const waveAnimateScale = d3.scaleLinear()\r\n    .range([0, waveClipWidth - fillCircleRadius * 2]) // Push the clip area one full wave then snap back.\r\n    .domain([0, 1]);\r\n\r\n  // Scale for controlling the position of the text within the gauge.\r\n  const textRiseScaleY = d3.scaleLinear()\r\n    .range([fillCircleMargin + fillCircleRadius * 2, (fillCircleMargin + textPixels * 0.7)])\r\n    .domain([0, 1]);\r\n\r\n  // Center the gauge within the parent SVG.\r\n  const gaugeGroup = gauge.append('g')\r\n    .attr('transform', 'translate(' + locationX + ',' + locationY + ')');\r\n\r\n  // Draw the outer Rectangle.\r\n  var rectpoints = [{x: 0, y: 0}, {x: 0, y: parseInt(gauge.style('height'))}, {x: parseInt(gauge.style('width'), 10), y: parseInt(gauge.style('height'))}, {x: parseInt(gauge.style('width'), 10), y: 0}, {x: 0, y: 0}];\r\n  var lineFunc = d3.line()\r\n      .x(function(d) { return d.x })\r\n      .y(function(d) { return d.y });\r\n  gaugeGroup.append('path')\r\n    .attr('d', lineFunc(rectpoints))\r\n    .attr('stroke', config.circleColor)\r\n    .attr('stroke-width', circleThickness)\r\n    .attr('fill', 'none');\r\n\r\n  // Text where the wave does not overlap.\r\n  const text1 = gaugeGroup.append('text')\r\n    .text(textRounder(textStartValue) + percentText)\r\n    .attr('class', 'liquidFillGaugeText')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('font-size', textPixels + 'px')\r\n    .style('fill', config.textColor)\r\n    .attr('transform', 'translate(' + radius + ',' + textRiseScaleY(config.textVertPosition) + ')');\r\n\r\n  // The clipping wave area.\r\n  const clipArea = d3.area()\r\n    .x(function (d: any) {\r\n      return waveScaleX(d.x);\r\n    })\r\n    .y0(function (d: any) {\r\n      return waveScaleY(Math.sin(Math.PI * 2 * config.waveOffset * -1 + Math.PI * 2 * (1 - config.waveCount) + d.y * 2 * Math.PI));\r\n    })\r\n    .y1(function (d) {\r\n      return (fillCircleRadius * 2 + waveHeight);\r\n    });\r\n  const waveGroup = gaugeGroup.append('defs')\r\n    .append('clipPath')\r\n    .attr('id', 'clipWave' + elementId);\r\n  const wave = waveGroup.append('path')\r\n    .datum(data)\r\n    .attr('d', clipArea)\r\n    .attr('T', 0);\r\n\r\n  // The inner circle with the clipping wave attached.\r\n  const fillCircleGroup = gaugeGroup.append('g')\r\n    .attr('clip-path', 'url(#clipWave' + elementId + ')');\r\n  fillCircleGroup.append('rect')\r\n        .attr('x', (radius) - fillCircleRadius)\r\n        .attr('y', radius - fillCircleRadius)\r\n        .attr('width', fillCircleRadius*2)\r\n        .attr('height', fillCircleRadius*2)\r\n        .style('fill', config.waveColor);\r\n\r\n  // Text where the wave does overlap.\r\n  const text2 = fillCircleGroup.append('text')\r\n    .text(textRounder(textStartValue) + percentText)\r\n    .attr('class', 'liquidFillGaugeText')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('font-size', textPixels + 'px')\r\n    .style('fill', config.waveTextColor)\r\n    .attr('transform', 'translate(' + radius + ',' + textRiseScaleY(config.textVertPosition) + ')');\r\n\r\n  // Make the value count up.\r\n  if (config.valueCountUp) {\r\n    const textTween = function g() {\r\n      const i = d3.interpolate(this.textContent, textFinalValue);\r\n      return (t) => {\r\n        this.textContent = textRounder(i(t)) + percentText;\r\n      };\r\n    };\r\n    text1.transition()\r\n      .duration(config.waveRiseTime)\r\n      .tween('text', textTween);\r\n    text2.transition()\r\n      .duration(config.waveRiseTime)\r\n      .tween('text', textTween);\r\n  }\r\n\r\n  // Make the wave rise. wave and waveGroup are separate so that horizontal and vertical movement can be controlled independently.\r\n  const waveGroupXPosition = fillCircleMargin + fillCircleRadius * 2 - waveClipWidth;\r\n  if (config.waveRise) {\r\n\r\n    waveGroup.attr('transform', 'translate(' + waveGroupXPosition + ',' + waveRiseScale(0) + ')')\r\n      .transition()\r\n      .duration(config.waveRiseTime)\r\n      .attr('transform', 'translate(' + waveGroupXPosition + ',' + waveRiseScale(fillPercent) + ')')\r\n      .on('start', () => {\r\n        wave.attr('transform', 'translate(1,0)');\r\n      }); // This transform is necessary to get the clip wave positioned correctly when waveRise=true and\r\n    // waveAnimate=false. The wave will not position correctly without this, but it's not clear why this is actually necessary.\r\n  } else {\r\n    waveGroup.attr('transform', 'translate(' + waveGroupXPosition + ',' + waveRiseScale(fillPercent) + ')');\r\n  }\r\n\r\n  if (config.waveAnimate) {\r\n    animateWave();\r\n  }\r\n\r\n  function animateWave(_?: any) {\r\n    wave.attr('transform', 'translate(' + waveAnimateScale(+wave.attr('T')) + ',0)');\r\n    wave.transition()\r\n      .duration(config.waveAnimateTime * (1 - +wave.attr('T')))\r\n      .ease(d3.easeLinear)\r\n      .attr('transform', 'translate(' + waveAnimateScale(1) + ',0)')\r\n      .attr('T', 1)\r\n      .on('end', () => {\r\n        wave.attr('T', 0);\r\n        animateWave(config.waveAnimateTime);\r\n      });\r\n  }\r\n\r\n  function GaugeUpdater() {\r\n    this.update = function (val) {\r\n      const newFinalValue = parseFloat(val).toFixed(2);\r\n      let textRounderUpdater = function (val2) {\r\n        return '' + Math.round(val2);\r\n      };\r\n      if (parseFloat(newFinalValue) !== parseFloat(textRounderUpdater(newFinalValue))) {\r\n        textRounderUpdater = function (val2) {\r\n          return parseFloat(val2).toFixed(1);\r\n        };\r\n      }\r\n      if (parseFloat(newFinalValue) !== parseFloat(textRounderUpdater(newFinalValue))) {\r\n        textRounderUpdater = function (val2) {\r\n          return parseFloat(val2).toFixed(2);\r\n        };\r\n      }\r\n\r\n      const textTween = () => {\r\n        const i = d3.interpolate(this.textContent, parseFloat(value).toFixed(2));\r\n        return function (t) {\r\n          this.textContent = textRounderUpdater(i(t)) + percentText;\r\n        };\r\n      };\r\n\r\n      text1.transition()\r\n        .duration(config.waveRiseTime)\r\n        .tween('text', textTween);\r\n      text2.transition()\r\n        .duration(config.waveRiseTime)\r\n        .tween('text', textTween);\r\n\r\n      fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value)) / config.maxValue;\r\n      waveHeight = fillCircleRadius * waveHeightScale(fillPercent * 100);\r\n      waveRiseScale = d3.scaleLinear()\r\n        // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave\r\n        // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill\r\n        // circle at 100%.\r\n        .range([(fillCircleMargin + fillCircleRadius * 2 + waveHeight), (fillCircleMargin - waveHeight)])\r\n        .domain([0, 1]);\r\n      const newHeight = waveRiseScale(fillPercent);\r\n      waveScaleX = d3.scaleLinear().range([0, waveClipWidth]).domain([0, 1]);\r\n      waveScaleY = d3.scaleLinear().range([0, waveHeight]).domain([0, 1]);\r\n      let newClipArea;\r\n      if (config.waveHeightScaling) {\r\n        newClipArea = d3.area()\r\n          .x((d: any) => {\r\n            return waveScaleX(d.x);\r\n          })\r\n          .y0((d: any) => {\r\n            return waveScaleY(Math.sin(Math.PI * 2 * config.waveOffset * -1 + Math.PI * 2 * (1 - config.waveCount) + d.y * 2 * Math.PI));\r\n          })\r\n          .y1((d) => {\r\n            return (fillCircleRadius * 2 + waveHeight);\r\n          });\r\n      } else {\r\n        newClipArea = clipArea;\r\n      }\r\n\r\n      const newWavePosition = config.waveAnimate ? waveAnimateScale(1) : 0;\r\n      wave.transition()\r\n        .duration(0)\r\n        .transition()\r\n        .duration(config.waveAnimate ? (config.waveAnimateTime * (1 - +wave.attr('T'))) : (config.waveRiseTime))\r\n        .ease(d3.easeLinear)\r\n        .attr('d', newClipArea)\r\n        .attr('transform', 'translate(' + newWavePosition + ',0)')\r\n        .attr('T', '1')\r\n        .on('start', () => {\r\n          if (config.waveAnimate) {\r\n            wave.attr('transform', 'translate(' + waveAnimateScale(0) + ',0)');\r\n            animateWave(config.waveAnimateTime);\r\n          }\r\n        });\r\n      waveGroup.transition()\r\n        .duration(config.waveRiseTime)\r\n        .attr('transform', 'translate(' + waveGroupXPosition + ',' + newHeight + ')');\r\n    };\r\n  }\r\n\r\n  return new GaugeUpdater();\r\n}\r\n","import { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport * as liquid from './liquidFillGauge';\r\n\r\n@Component({\r\n  selector: 'lib-ngx-liquid-gauge',\r\n  template: `<div #gauge></div>`,\r\n  styles: []\r\n})\r\nexport class NgxLiquidGaugeComponent implements OnInit, OnChanges {\r\n\r\n  @ViewChild('gauge') gauge: any;\r\n  id = 'gauge' + Math.floor(Math.random() * 100000) + 1; // assign a random ID to SVG component\r\n  private defaultSettings = liquid.liquidFillGaugeDefaultSettings();\r\n  @Input() private value = 0;\r\n  @Input() private minValue = this.defaultSettings.minValue;\r\n  @Input() private maxValue = this.defaultSettings.maxValue;\r\n  @Input() private circleThickness = this.defaultSettings.circleThickness;\r\n  @Input() private circleFillGap = this.defaultSettings.circleFillGap;\r\n  @Input() private circleColor = this.defaultSettings.circleColor;\r\n  @Input() private waveHeight = this.defaultSettings.waveHeight;\r\n  @Input() private waveCount = this.defaultSettings.waveCount;\r\n  @Input() private waveRiseTime = this.defaultSettings.waveRiseTime;\r\n  @Input() private waveAnimateTime = this.defaultSettings.waveAnimateTime;\r\n  @Input() private waveRise = this.defaultSettings.waveRise;\r\n  @Input() private waveHeightScaling = this.defaultSettings.waveHeightScaling;\r\n  @Input() private waveAnimate = this.defaultSettings.waveAnimate;\r\n  @Input() private waveColor = this.defaultSettings.waveColor;\r\n  @Input() private waveOffset = this.defaultSettings.waveOffset;\r\n  @Input() private textVertPosition = this.defaultSettings.textVertPosition;\r\n  @Input() private textSize = this.defaultSettings.textSize;\r\n  @Input() private valueCountUp = this.defaultSettings.valueCountUp;\r\n  @Input() private displayPercent = this.defaultSettings.displayPercent;\r\n  @Input() private textColor = this.defaultSettings.textColor;\r\n  @Input() private waveTextColor = this.defaultSettings.waveTextColor;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.createChart();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.createChart();\r\n  }\r\n\r\n  createChart(): any {\r\n    const element: Element = this.gauge.nativeElement;\r\n    //clear previous chart\r\n    d3.select(element).selectAll('*').remove();\r\n\r\n    d3.select(element)\r\n      .append('svg').attr('id', this.id)\r\n      .attr('width', '150')\r\n      .attr('height', '150');\r\n    const settings = {\r\n      minValue: this.minValue,\r\n      maxValue: this.maxValue,\r\n      circleThickness: this.circleThickness,\r\n      circleFillGap: this.circleFillGap,\r\n      circleColor: this.circleColor,\r\n      waveHeight: this.waveHeight,\r\n      waveCount: this.waveCount,\r\n      waveRiseTime: this.waveRiseTime,\r\n      waveAnimateTime: this.waveAnimateTime,\r\n      waveRise: this.waveRise,\r\n      waveHeightScaling: this.waveHeightScaling,\r\n      waveAnimate: this.waveAnimate,\r\n      waveColor: this.waveColor,\r\n      waveOffset: this.waveOffset,\r\n      textVertPosition: this.textVertPosition,\r\n      textSize: this.textSize,\r\n      valueCountUp: this.valueCountUp,\r\n      displayPercent: this.displayPercent,\r\n      textColor: this.textColor,\r\n      waveTextColor: this.waveTextColor,\r\n    };\r\n    liquid.loadLiquidFillGauge(this.id, this.value, settings);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxLiquidGaugeComponent } from './ngx-liquid-gauge.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [NgxLiquidGaugeComponent],\r\n  exports: [NgxLiquidGaugeComponent]\r\n})\r\nexport class NgxLiquidGaugeModule { }\r\n"],"names":["d3.select","d3.scaleLinear","d3.line","d3.area","d3.interpolate","d3.easeLinear","liquid.liquidFillGaugeDefaultSettings","liquid.loadLiquidFillGauge"],"mappings":"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"}
